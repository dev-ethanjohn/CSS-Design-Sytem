/**=======================
 * CUSTOM PROPERTIES
 *========================**/

:root {
  /* Values that need to be reused across multiple components (e.g., theme colors, typography sizes). */
  /* colors */
  --clr-dark: 230 35% 7%;
  --clr-light: 231 77% 90%;
  --clr-white: 0 0% 100%;

  /* font-size */
  --fs-900: clamp(5rem, 8vw + 1rem, 9.375rem);
  --fs-800: 3.5rem;
  --fs-700: 1.5rem;
  --fs-600: 1rem;
  --fs-500: 1.75rem;
  --fs-400: 0.9375rem;
  --fs-300: 1rem;
  --fs-200: 0.875rem;

  /* font-family */
  --ff-serif: "Bellefair", serif;
  --ff-sans-cond: "Barlow Condensed", sans-serif;
  --ff-sans-normal: "Barlow", sans-serif;

  /* spacing */
  /* --gap: 8rem; */
}

/* Tablet */
@media (min-width: 35em) {
  :root {
    /* --fs-900: 9.325rem; */
    --fs-800: 5rem;
    --fs-700: 2.5rem;
    --fs-600: 1.5rem;
    --fs-400: 1rem;
  }
}

/* desktop */
@media (min-width: 45em) {
  :root {
    --fs-800: 6.25rem;
    --fs-700: 3.5rem;
    --fs-600: 2rem;
    --fs-400: 1.125rem;
  }
}

/**=======================
 * RESET
 * ref: https://www.joshwcomeau.com/css/custom-css-reset/
 *========================**/

/* BOX SIZING  */

*,
*::before,
*::after {
  box-sizing: border-box;
}

/* RESET MARGIN */
/* ? we could use targetted reset for margin if working on larger codebases */
* {
  margin: 0;
  padding: 0;
}

/* Body setup */
body {
  font-family: var(--ff-sans-normal);
  font-size: var(--fs-400);
  color: hsl(var(--clr-white));
  background-color: hsl(var(--clr-dark));

  line-height: 1.5;
  min-height: 100vh;

  /* improve text rendering on mac */
  -webkit-font-smoothing: antialiased;

  display: grid;
  /* streches the grid to fill the available space vertically */
  grid-template-rows: min-content 1fr;
}

/* Images */
img,
picture {
  /* remove margin */
  display: block;
  max-width: 100%;
}

/* Forms */
input,
button,
textarea,
select {
  font: inherit;
}

/* remove animations */
@media (prefers-reduced-motion: reduce) {
  *,
  *::before,
  *::after {
    animation-duration: 0.01m !important;
    animation-iteration-count: 0.01m !important;
    transition-duration: 0.01m !important;
    scroll-behavior: auto !important;
  }
}

/* avoid text overflows */
p,
h1,
h2,
h3,
h4,
h5,
h6 {
  overflow-wrap: break-word;
}

h1,
h2,
h3,
h4,
h5,
h6,
p {
  font-weight: 400;
}

/**=======================
 * UTILITY CLASSES
 *========================**/

/* general */

.flex {
  display: flex;
  gap: var(--gap, 1rem);
}

.grid {
  display: grid;
  gap: var(--gap, 1rem);
}

.d-block {
  display: block;
}

/* no added specificity to easily override */
/* sibling before it */
.flow > *:where(:not(:first-child)) {
  margin-top: var(--flow-space, 1rem);
  /* outline: 1px solid red; */
}

.container {
  padding-inline: 2em;
  margin-inline: auto;
  max-width: 80rem;
}

.grid-container {
  text-align: center;
  /* border: 5px solid green; */
  display: grid;
  place-items: center;
  padding-inline: 1rem;
}

.grid-container * {
  max-width: 50ch;
}

/* min 720px */
@media (min-width: 45rem) {
  .grid-container {
    text-align: left;
    column-gap: var(--container-gap, 2rem);
    grid-template-columns: minmax(2em, 1fr) repeat(2, minmax(0, 40em)) minmax(
        2em,
        1fr
      );
  }

  .grid-container > *:first-child {
    grid-column: 2;
    /* outline: 1px solid red; */
  }

  .grid-container > *:last-child {
    grid-column: 3;
    /* outline: 1px solid red; */
  }

  .grid-container--home {
    padding-bottom: max(6rem, 20vh);
    align-items: end;
  }
}

/* assistive tech */
.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}

.box {
  background-color: aquamarine;
  padding: 3rem;
}
/* Colors */
.bg-dark {
  background-color: hsl(var(--clr-dark));
}
.bg-accent {
  background-color: hsl(var(--clr-light));
}
.bg-white {
  background-color: hsl(var(--clr-white));
}
.text-dark {
  color: hsl(var(--clr-dark));
}
.text-accent {
  color: hsl(var(--clr-light));
}
.text-white {
  color: hsl(var(--clr-white));
}

.example-component {
  background-color: hsl(var(--clr-light) / 0.2);
}

/* topgraphy */
.ff-serif {
  font-family: var(--ff-serif);
}
.ff-sans-cond {
  font-family: var(--ff-sans-cond);
}
.ff-sans-normal {
  font-family: var(--ff-sans-normal);
}

.letter-spacing-1 {
  letter-spacing: 4.75px;
}
.letter-spacing-2 {
  letter-spacing: 2.7px;
}
.letter-spacing-3 {
  letter-spacing: 2.35px;
}

.uppercase {
  text-transform: uppercase;
}

.fs-900 {
  font-size: var(--fs-900);
}
.fs-800 {
  font-size: var(--fs-800);
}
.fs-700 {
  font-size: var(--fs-700);
}
.fs-600 {
  font-size: var(--fs-600);
}
.fs-500 {
  font-size: var(--fs-500);
}
.fs-400 {
  font-size: var(--fs-400);
}
.fs-300 {
  font-size: var(--fs-300);
}
.fs-200 {
  font-size: var(--fs-200);
}

.fs-900,
.fs-800,
.fs-700,
.fs-600 {
  line-height: 1.1;
}

.numbered-title {
  font-family: var(--ff-sans-cond);
  font-size: var(--fs-700);
  text-transform: uppercase;
  letter-spacing: 4.72px;
}

.numbered-title span {
  /* adaptable based off the parent font size */
  margin-right: 0.5em;
  font-weight: 700;
  color: hsl(var(--clr-light) / 0.2);
}

/**=======================
 * ?COMPONENTS
 *========================**/
.large-button {
  font-size: 2rem;
  /* change the display for this inline element */
  position: relative;
  display: inline-grid;
  /* vertical + horizontal */
  place-items: center;
  padding: 0 2em;
  aspect-ratio: 1;
  text-decoration: none;
  border-radius: 50%;
  /* z-index: 1; */
}

.large-button::after {
  content: "";
  z-index: -1;
  position: absolute;
  background: hsl(var(--clr-light) / 0.15);
  width: 100%;
  height: 100%;
  opacity: 0;
  border-radius: inherit;
  transition: opacity 500ms linear, transform 500ms ease-in-out;
}

.large-button:hover::after,
.large-button:focus::after {
  opacity: 1;
  transform: scale(1.2);
}

.primary-navigation {
  /* gap: var(--gap); */
  --gap: 8rem;
  /* a custom property declared locally */
  /* Component-specific values (e.g., spacing, colors unique to one component). */
  --underline-gap: 2rem;
  list-style: none;
}

.primary-navigation a {
  text-decoration: none;
}

.primary-navigation a > span {
  font-weight: 700;
  margin-right: 0.5em;
}

.underline-indicators > * {
  /* 1 rem here is just a fallback */
  padding: var(--underline-gap, 1rem) 0;
  /* background: red; */
  border: 0;
  cursor: pointer;
  border-bottom: 0.2rem solid hsl(var(--clr-white) / 0);
}

.underline-indicators > *:hover,
.underline-indicators > *:focus {
  border-bottom: 0.2rem solid hsl(var(--clr-light) / 0.5); /* Solid underline on hover */
}

/* .underline-indicators > *:hover  */
/* ?attibute selector */
.underline-indicators > .active,
.underline-indicators [aria-selected="true"] {
  color: hsl(var(--clr-white));
  border-color: 0.2rem solid hsl(var(--clr-light) / 1);
}

.tab-list {
  /* @overrrid */
  --gap: 2rem;
}

/* DOTS */
.dot-indicators > * {
  cursor: pointer;
  border: 0;
  border-radius: 50%;
  aspect-ratio: 1;
  padding: 0.5rem;
  background-color: hsl(var(--clr-light) / 0.2);
}

.dot-indicators > *:hover,
.dot-indicators > *:focus {
  background-color: hsl(var(--clr-light) / 0.5);
}

.dot-indicators > [aria-selected="true"] {
  background-color: hsl(var(--clr-light) / 1);
}

/* Cricle */
/* .circle-indicators > * {
  cursor: pointer;
  border: 0;
  border-radius: 50%;
  aspect-ratio: 1;
  width: 1em;
  background-color: hsl(var(--clr-dark) / 0.2);
  border: 0.2em solid hsl(var(--clr-light) / 0.2);
} */

.circle-indicators > * {
  cursor: pointer;
  border: 0;
  border-radius: 50%; /* Make the buttons circular */
  aspect-ratio: 1; /* Ensure width and height are equal */
  width: 6rem; /* Set the size of the buttons */
  height: 6rem;
  background-color: hsl(var(--clr-dark) / 0.2);
  border: 0.2em solid hsl(var(--clr-light) / 0.2);
  display: grid;
  place-items: center;
  transition: transform 0.2s ease, background-color 0.2s ease,
    border-color 0.2s ease;
}

/* Hover and Focus States */
.circle-indicators > *:hover,
.circle-indicators > *:focus {
  background-color: hsl(var(--clr-dark) / 1);
  border-color: hsl(var(--clr-light) / 0.5);
}

/* Active State */
.circle-indicators > [aria-selected="true"] {
  background-color: hsl(var(--clr-dark) / 1);
  border-color: hsl(var(--clr-accent) / 1);
}

/**=======================
 * PAGE SPECIFIC backgrounds
 *========================**/

body {
  background-size: cover;
  background-position: bottom center;
}
/* home */
.home {
  background-image: url(./assets/home/background-home-mobile.jpg);
}

@media (min-width: 35em) {
  .home {
    background-position: center center;
    background-image: url(./assets/home/background-home-tablet.jpg);
  }
}

@media (min-width: 45em) {
  .home {
    background-image: url(./assets/home/background-home-desktop.jpg);
  }
}
